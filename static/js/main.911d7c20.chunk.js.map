{"version":3,"sources":["component/partOfBulid/loadBiuld.js","component/3DGlb.js","component/Home.js","App.js","index.js"],"names":["buildModelArr","TDGlb","renderer","scene","camera","controls","dracoLoader","DRACOLoader","setDecoderPath","setDecoderConfig","type","preload","loader","GLTFLoader","setDRACOLoader","useEffect","init","animate","THREE","alpha","antialias","precision","setSize","window","innerWidth","innerHeight","outputEncoding","el","document","querySelector","innerHTML","appendChild","domElement","position","set","add","OrbitControls","minDistance","maxDistance","enablePan","dampingFactor","axesHelper","light","allLight","sun","forEach","modelStr","index","load","gltf","videoPartOne","children","find","item","name","videoPartTwo","video","play","material","map","scale","render","requestAnimationFrame","TWEEN","update","className","style","backgroundImage","Home","to","App","id","autoPlay","muted","loop","display","src","exact","path","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.911d7c20.chunk.js","sourcesContent":["export const buildModelArr = ['../build/BAKE03backUP.gltf','../build/HDR.glb']","import * as THREE from 'three'\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\nimport {DRACOLoader} from \"three/examples/jsm/loaders/DRACOLoader\";\nimport {useEffect} from \"react\";\nimport {TWEEN} from \"three/examples/jsm/libs/tween.module.min\";\nimport {buildModelArr} from \"./partOfBulid/loadBiuld\";\n\nexport const TDGlb = () => {\n    let renderer, scene, camera, controls;\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath('/gltf/');\n    dracoLoader.setDecoderConfig({type: \"js\"});\n    dracoLoader.preload();\n    const loader = new GLTFLoader()\n    loader.setDRACOLoader(dracoLoader);\n\n    useEffect(() => {\n        init();\n        animate()\n    }, [])\n\n    const init = () => {\n        // renderer\n        renderer = new THREE.WebGLRenderer({\n            alpha: true,\n            antialias: true,\n            precision: 'highp',\n        });\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.outputEncoding = THREE.sRGBEncoding;\n        const el = document.querySelector('.showDemos');\n        if (!el) return;\n        el.innerHTML = '';\n        el.appendChild(renderer.domElement);\n\n        // scene\n        scene = new THREE.Scene();\n\n        // camera\n        camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n        camera.position.set(32, 30, 23);\n        scene.add(camera);\n\n        // controls\n        controls = new OrbitControls(camera, renderer.domElement);\n        controls.minDistance = 10;\n        controls.maxDistance = 50;\n        controls.enablePan = false;\n        controls.dampingFactor = 0.1;\n\n        const axesHelper = new THREE.AxesHelper(150);\n        axesHelper.position.set(0, 0, -6)\n        scene.add(axesHelper);\n\n        // light\n        const light = new THREE.PointLight(0xffffff, 1.5);\n        const allLight = new THREE.AmbientLight(0xffffff, 1);\n        const sun = new THREE.SpotLight(0xffffff, 2.5);\n        sun.position.set(300, -300, 300);\n        camera.add(light, allLight, sun);\n\n        // model\n        buildModelArr.forEach((modelStr, index) => {\n            loader.load(modelStr, function (gltf) {\n                const videoPartOne = gltf.scene.children.find((item) => item.name === '动画')\n                const videoPartTwo = gltf.scene.children.find((item) => item.name === '球体')\n                if (videoPartOne) {\n                    const video = document.querySelector('#video1')\n                    video.play()\n                    videoPartOne.material.map = new THREE.VideoTexture(video)\n                } else if (videoPartTwo) {\n                    const video = document.querySelector('#video2')\n                    video.play()\n                    videoPartTwo.material.map = new THREE.VideoTexture(video)\n                }\n                if (index === 0) gltf.scene.position.set(0, -12, 0)\n                else if (index === 1) gltf.scene.scale.set(1.8, 1.8, 1.8)\n                scene.add(gltf.scene);\n            });\n        })\n    }\n\n    const render = () => {\n        renderer.render(scene, camera);\n    }\n\n    const animate = () => {\n        render(scene, camera);\n        requestAnimationFrame(() => {\n            TWEEN.update();\n            if (controls) {\n                controls.update();\n                animate()\n            }\n        });\n    }\n\n    return <div className='showDemos' style={{backgroundImage: 'radial-gradient(#000000, #222222)'}}/>\n}","import {Link} from \"react-router-dom\";\nimport '../App.css';\n\nexport const Home = () => {\n    return (\n        <div className='nav' >\n            <Link to='/3DGlbBuild'>3D-glb</Link>\n        </div>\n    )\n}","import './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {TDGlb} from \"./component/3DGlb\";\nimport {Home} from \"./component/Home\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <video id='video1' autoPlay muted loop style={{display: 'none'}}>\n                    <source src=\"./build/Z01_bake.mp4\" type=\"video/mp4\"/>\n                </video>\n                <video id='video2' autoPlay muted loop style={{display: 'none'}}>\n                    <source src=\"./build/344_1672403983.mp4\" type=\"video/mp4\"/>\n                </video>\n                <Home/>\n                <Route exact path=\"/3DGlbBuild\"/>\n                <Route path=\"/3DGlbBuild\" component={TDGlb}/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}